Generating a new SSH key
    1. Open Terminal.
    2. Paste the text below, substituting in your GitHub Enterprise email address.
       $ ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
       This creates a new ssh key, using the provided email as a label.
       > Generating public/private rsa key pair.
    3. When you're prompted to "Enter a file in which to save the key," press Enter. This accepts the default file location.
       > Enter a file in which to save the key (/home/you/.ssh/id_rsa): [Press enter]
    4. At the prompt, type a secure passphrase. For more information, see "Working with SSH key passphrases".
       > Enter passphrase (empty for no passphrase): [Type a passphrase]
       > Enter same passphrase again: [Type passphrase again]
Adding your SSH key to the ssh-agent
Before adding a new SSH key to the ssh-agent to manage your keys, you should have checked for existing SSH keys and generated a new SSH key. 
    1. Start the ssh-agent in the background.
       $ eval "$(ssh-agent -s)"
       > Agent pid 59566
    2. Add your SSH private key to the ssh-agent. If you created your key with a different name, or if you are adding an existing key that has a different name, replace id_rsa in the command with the name of your private key file.
       $ ssh-add ~/.ssh/id_rsa
                                       

Getting & Creating Projects
Command
Description
git init
Initialize a local Git repository
git clone ssh://git@github.com/[username]/[repository-name].git
Create a local copy of a remote repository
Basic Snapshotting
Command
Description
git status
Check status
git add [file-name.txt]
Add a file to the staging area
git add -A
Add all new and changed files to the staging area
git commit -m "[commit message]"
Commit changes
git rm -r [file-name.txt]
Remove a file (or folder)
Branching & Merging
Command
Description
git branch
List branches (the asterisk denotes the current branch)
git branch -a
List all branches (local and remote)
git branch [branch name]
Create a new branch
git branch -d [branch name]
Delete a branch
git push origin --delete [branch name]
Delete a remote branch
git checkout -b [branch name]
Create a new branch and switch to it
git checkout -b [branch name] origin/[branch name]
Clone a remote branch and switch to it
git branch -m [old branch name] [new branch name]
Rename a local branch
git checkout [branch name]
Switch to a branch
git checkout -
Switch to the branch last checked out
git checkout -- [file-name.txt]
Discard changes to a file
git merge [branch name]
Merge a branch into the active branch
git merge [source branch] [target branch]
Merge a branch into a target branch
git stash
Stash changes in a dirty working directory
git stash clear
Remove all stashed entries
Sharing & Updating Projects
Command
Description
git push origin [branch name]
Push a branch to your remote repository
git push -u origin [branch name]
Push changes to remote repository (and remember the branch)
git push
Push changes to remote repository (remembered branch)
git push origin --delete [branch name]
Delete a remote branch
git pull
Update local repository to the newest commit
git pull origin [branch name]
Pull changes from remote repository
git remote add origin ssh://git@github.com/[username]/[repository-name].git
Add a remote repository
git remote set-url origin ssh://git@github.com/[username]/[repository-name].git
Set a repository's origin branch to SSH
Inspection & Comparison
Command
Description
git log
View changes
git log --summary
View changes (detailed)
git log --oneline
View changes (briefly)
git diff [source branch] [target branch]
Preview changes before merging
                                                                                
